@{
    string guid = Html.Guid();
    CurrentUser user = ViewBag.CurrentUser;
}
<script src="~/Incs/UEditor/ueditor.forAdmin.config.js" type="text/javascript"></script>
<script src="~/Incs/UEditor/ueditor.all.min.js" type="text/javascript"></script>
<div class="main" id="main">
    <el-form ref="form" label-width="100px" label-position="left">
        <el-form-item label="站点标识" prop="Remark">
            <el-input v-model="Remark" v-validate="{data:Remark,dataType:'*',nullMsg:'请填写站点标识!'}"></el-input>
            <span class="help-block validate-tips-box">仅用于后台识别</span>
        </el-form-item>
        <el-form-item label="站点名称">
            <el-input v-model="Name" maxlength="50" v-validate="{data:Name,dataType:'*',nullMsg:'请填写站点名称!'}"></el-input>
            <span class="help-block validate-tips-box">默认作为站点的标题后缀</span>
        </el-form-item>
        <el-form-item label="访问目录">
            <el-input v-model="Directory" maxlength="50" v-validate="{data:Directory,dataType:'string',nullMsg:'请填写访问目录！',errorMsg:'访问目录填写错误'}"></el-input>
            <span class="help-block validate-tips-box">如果网站未绑定域名，则用主域名+访问目录形式访问,<span class="text-danger">修改后必须重启进程才生效。</span></span>
        </el-form-item>
        <el-form-item label="绑定域名">
            <el-input v-model="Domain"></el-input>
            <span class="help-block validate-tips-box">如：http://www.domain.cn，留空则用主域名+目录访问网站,如有采用非80端口，必须带上端口,<span class="text-danger">修改后必须重启进程才生效。</span></span>
        </el-form-item>
        <el-form-item label="模板目录">
            <ui-select v-model="TemplateDirectory" :options="TemplateDirectoryList" :clearable="false" :multiple="false" style="width:100%;" maxlength="100" v-validate="{data:TemplateDirectory,dataType:'*',nullMsg:'请选择模板目录!'}"></ui-select>
            <span class="help-block validate-tips-box">模板目录在/Templates目录下，填写或修改时请确认目录是否存在</span>
        </el-form-item>
        <el-form-item label="Gzip压缩">
            <el-switch v-model="Compression" active-text="开启" :active-value="1" :inactive-value="0"></el-switch>
            <span class="help-block">压缩可减少带宽消耗和提升访问速度，如果服务器的IIS中已开启了Gzip压缩，网站中就不需要再开启。</span>
        </el-form-item>
        @{
            string beforeSubmitJs = "";
            var data = new ViewDataDictionary();
            data.Add("from", PageAdmin.Common.FromEnum.Admin);
            data.Add("currentUser", user);
            data.Add("guid", guid);
            data.Add("i", 0);
            int i = 0;
            var fieldData = Html.GetFieldList("pa_site", "Add", user);
            if (fieldData != null)
            {
                foreach (var row in fieldData)
                {
                    data["i"] = i;
                    beforeSubmitJs += row.BeforeSubmitJs;
                    Html.RenderPartial("~/Areas/E/Views/CustomForm/FormPartial.cshtml", (object)row, data);
                    i++;
                }
            }
        }
    </el-form>
    <div class="footer-submit-bar" style="padding-left:100px">
        <el-button type="primary" v-on:click="postSubmit">提交</el-button>
        <el-button onclick="closeSelf()">关闭</el-button>
    </div>
</div>

<script type="text/javascript">

        //提交前执行
    function beforeSubmitExecute() {
        @Html.Raw(beforeSubmitJs)
        return true;
    }
    //绑定数据
    var formData = @Html.RawModel((string)Model);
    formData.Guid = "@guid";
    var id = "@Request.QueryString["id"]";
    if (id == "") {
        formData.Compression = 0;
    }
    formData.TemplateDirectoryList = [];
    var vue = new Vue({
        el: "#main",
        data: formData,
        methods: {
            postSubmit: function () {
                var validated = this.validateForm({ beforeSubmit: function () { return beforeSubmitExecute() } });//jquery表单验证
                if (validated) {
                    this.submit({ url: "@Url.ActionUrl()", data: formData, success: "PostBack()"});
                }
            }
        },
    });
    function PostBack() {
        if (id == "") {
            location.href = location.href;
        }
        parent.loadData();
    }
    //加载数据
    function loadData()
    {
        vue.ajax({
            url: "@Url.ActionUrl("TemplatesDirectoryList", "TemplateManager")",
            data: {},
            success: function (responseData) {
                if (Array.isArray(responseData))
                {
                    var templateDirectoryList = [];
                    responseData.forEach(function (item, index) {
                        templateDirectoryList.push({ value: item.Name, label: item.Name });
                    })
                    formData.TemplateDirectoryList = templateDirectoryList;
                }
            }
        });
    }
    loadData();
</script>