@{
    string layerIndex = Request.QueryString["layerIndex"];
    string table = ViewBag.Table;
    string action = ViewContext.RouteData.Values["action"].ToString();
    CurrentUser currentUser = ViewBag.CurrentUser;
    IEnumerable<dynamic> fieldData = Html.GetFieldList((string)ViewBag.Table, "list", currentUser);
}
<div class="main" id="main">
    <div class="breadcrumb-box">
        <el-breadcrumb separator="/">
            <el-breadcrumb-item><i class="fa fa-home fa-fw"></i><a href="javascript:void(0)" onclick="location.href=location.href">@ViewBag.TableRemark</a></el-breadcrumb-item>
        </el-breadcrumb>
    </div>
    <table border=0 cellpadding=0 cellspacing=0 class="tb-head form-inline form-group-sm">
        <tr>
            <td>
                <div class="btn-group btn-group-sm">
                    <el-tooltip effect="dark" content="添加分类数据" placement="bottom-start">
                        <el-button size="small" v-on:click="dialog({title:'添加',url:'@Url.ActionUrl("Add")?table=@(table)&xuhao='+dataList.length,width:'90%',height:'90%',target:'self'})">
                            添加
                        </el-button>
                    </el-tooltip>
                    <el-dropdown>
                        <el-button size="small">
                            功能菜单<i class="el-icon-arrow-down el-icon--right"></i>
                        </el-button>
                        <el-dropdown-menu slot="dropdown">
                            <el-dropdown-item><a href="javascript:void(0)" v-on:click="submit({url:'@Url.ActionUrl("SetField","CommonMethod")?table=@table',data:{ids:getSelectedPropertys(selectList,'Id'),setField:'IsFinal',setValue:0},beforeExecute:function(){return checkSelectedItems(selectList)},success:function(){loadData()},})">转为非最终菜单</a></el-dropdown-item>
                            <el-dropdown-item><a href="javascript:void(0)" v-on:click="submit({url:'@Url.ActionUrl("SetField","CommonMethod")?table=@table',data:{ids:getSelectedPropertys(selectList,'Id'),setField:'IsFinal',setValue:1},beforeExecute:function(){return checkSelectedItems(selectList)},success:function(){loadData()},})">转为最终菜单</a></el-dropdown-item>
                            <el-dropdown-item class="divider"></el-dropdown-item>
                            <el-dropdown-item><a href="javascript:void(0)" v-on:click="dialog({title:'分类转移',url:'@Url.ActionUrl("Transfer","CommonMethod")?table=@(table)&tableType=3&selectedIds='+getSelectedPropertys(selectList,'Id'),beforeExecute:function(){return checkSelectedItems(selectList)},width:'600px',height:'90%',target:'self'})">转移</a></el-dropdown-item>
                            <el-dropdown-item class="divider"></el-dropdown-item>
                            <el-dropdown-item><a href="javascript:void(0)" v-on:click="submit({url:'@Url.ActionUrl("Delete")?table=@table',data:{ids:getSelectedPropertys(selectList,'Id')},confirmMsg:'确定删除吗？',success:loadData,beforeExecute:function(){return checkSelectedItems(selectList)}})">删除</a></el-dropdown-item>
                        </el-dropdown-menu>
                    </el-dropdown>
                </div>
            </td>
        </tr>
    </table>
    <div class="table-list-box">
        <template>
            <el-table class="tree_table" ref="multipleTable" :data="dataList" default-expand-all :tree-props="{children:'Children'}" row-key="Id" v-on:selection-change="handleSelectionChange" tooltip-effect="dark" highlight-current-row border style="width: 100%">
                <el-table-column type="selection" align="center" width="40"></el-table-column>
                @{
                    int i = 0;
                    foreach (var item in fieldData)
                    {
                        int fieldId = item.Id;
                        //int listWords =StringHelper.Format<int>(item.ListWords);
                        string remark = item.Remark;
                        string field = StringHelper.FirstCharUpper(item.Name);
                        string fieldType = item.FieldType;
                        string valueType = item.ValueType;
                        string align = "center";
                        if (valueType == "nvarchar" || valueType == "text")
                        {
                            if (fieldType != "image" && fieldType != "file")
                            {
                                align = "left";
                            }
                        }
                        <el-table-column align="@align" label="@remark" :show-overflow-tooltip="true">
                            <template slot-scope="scope">
                                @if (i == 0)
                                {
                                    <span class="node fa fa-file-text-o" v-show="scope.row.IsFinal==1"></span>
                                    <span class="node fa" v-on:click="load(scope.row)" style="cursor:pointer;" v-bind:class="{'fa-folder':scope.row.OpenChildren==false,'fa-folder-open':scope.row.OpenChildren==true}" v-show="scope.row.IsFinal==0"></span>
                                }
                                @if (new string[] { "images", "files" }.Contains(fieldType))
                                {
                                    <span>-</span>
                                }
                                else if (new string[] { "subtable" }.Contains(fieldType))
                                {
                                    string subTableType = item.SubTableType;
                                    string bt_text = StringHelper.Format<string>(item.BtText);
                                    string win_width = StringHelper.Format<string>(item.WinWidth);
                                    string win_height = StringHelper.Format<string>(item.WinHeight);
                                    <span>
                                        <el-button size="small" v-on:click="dialog({title:'@(remark)',url:'/E/SubData/@(subTableType=="multiple"?"":"Set")?parentId='+scope.row.Id+'&fieldId=@fieldId',width:'@win_width',height:'@win_height',target:'self'})">@(bt_text)</el-button>
                                    </span>
                                }
                                else if (fieldType == "image")
                                {
                                    <a :href="scope.row.@field" target="_blank" v-show="scope.row.@field!=''"><img :src="scope.row.@field" class="thumbnail" /></a>
                                }
                                else if (fieldType == "file")
                                {
                                    <a :href="scope.row.@field" target="_blank">{{scope.row.@field}}</a>
                                }
                                else
                                {
                                    <span>{{scope.row.@field}}</span>
                                }
    
                            </template>
                        </el-table-column>
                        i++;
                    }
                }
                <el-table-column label="Id" prop="Id" width="100" align="center"></el-table-column>
                <el-table-column label="启用" align="center" width="120">
                    <template slot-scope="scope">
                        <el-checkbox :true-label="1" :false-label="0" v-model="scope.row.State" v-on:change="submit({url:'@Url.ActionUrl("SetField","CommonMethod")?table=@(table)',data:{ids:scope.row.Id,setField:'State',setValue:scope.row.State},showSuccessMsg:false})"></el-checkbox>
                    </template>
                </el-table-column>
                <el-table-column label="序号" width="150" align="center">
                    <template slot-scope="scope">
                        <el-input v-model="scope.row.Xuhao" size="small" style="width:120px" maxlength="4" class="xuhao" v-on:change="updateXuhao({row:scope.row,url:'@Url.ActionUrl("UpdataListXuhao", "CommonMethod")?table=@table',dataList:dataList})">
                            <template slot="prepend">
                                <el-button v-on:click="updateXuhao({type:-1,row:scope.row,url:'@Url.ActionUrl("UpdataListXuhao", "CommonMethod")?table=@table',dataList:dataList})">↑</el-button>
                            </template>
                            <template slot="append">
                                <el-button slot="append" v-on:click="updateXuhao({type:1,row:scope.row,url:'@Url.ActionUrl("UpdataListXuhao","CommonMethod")?table=@table',dataList:dataList})">↓</el-button>
                            </template>
                        </el-input>
                    </template>
                </el-table-column>
                <el-table-column label="添加下级" width="150" align="center">
                    <template slot-scope="scope">
                        <el-button-group>
                            <el-button type="button" size="small" v-on:click="dialog({title:scope.row.Name+'：子分类添加',url:'@Url.ActionUrl("Add")?table=@table&parentId='+scope.row.Id,width:'90%',height:'90%',target:'self'})" v-show="scope.row.IsFinal==0" title="添加子栏目">添加</el-button>
                            <el-button type="button" size="small" disabled v-show="scope.row.IsFinal==1">添加</el-button>
                        </el-button-group>
                    </template>
                </el-table-column>
                <el-table-column label="操作" width="300" align="center">

                    <template slot-scope="scope">
                        <el-button-group>
                            <el-button type="button" size="small" v-on:click="dialog({title:'修改',url:'@Url.ActionUrl("Edit")?table=@table&id='+scope.row.Id,width:'90%',height:'90%',target:'self'})">修改</el-button>
                            <el-button type="button" size="small" v-on:click="submit({url:'@Url.ActionUrl("delete")?table=@table',confirmMsg:'是否确定删除？',data:{id:scope.row.Id},success:loadData})">删除</el-button>
                        </el-button-group>
                    </template>
                </el-table-column>
            </el-table>
        </template>
    </div>
</div>

<script type="text/javascript">
   var loadUrl = "@Url.ActionUrl("ListData")?table=@table";
    //vue实例化
    var vue = new Vue({
        el: "#main",
        data: {
            selectList: [],
            dataList: [],
            expandKeys:[],//展开的ids
        },
        methods: {
            loadData: function () {
                loadData();
            },
            handleSelectionChange: function(val) {
                this.selectList = val;
            },
            load: function (itemRow){
                var vue = this;
                var parentId = itemRow.Id;
                if (itemRow.OpenChildren == false) {
                    vue.expandKeys.push(parentId);
                    itemRow.OpenChildren  = true;
                    vue.ajax({
                        url: loadUrl,
                        data: { parentId: parentId},
                        success: function (data) {
                            if (Array.isArray(data)) {
                                vue.$set(itemRow,"Children", data); //必须采用vue的设置方式才能进行跟踪
                            }
                        }
                    });
                } else {
                    vue.expandKeys.remove(parentId)
                    vue.$set(itemRow, "Children",[]);
                    itemRow.OpenChildren = false;
                }

            },
        }
    });

    //加载数据
    function loadData()
    {
        vue.ajax({
            url: loadUrl,
            data: { parentId: 0, expandKeys: vue.expandKeys.join(",") },
            success: function (data) {
                if (Array.isArray(data)) {
                    vue.dataList = data;
                }
            }
        });
    }
    loadData();
</script>


