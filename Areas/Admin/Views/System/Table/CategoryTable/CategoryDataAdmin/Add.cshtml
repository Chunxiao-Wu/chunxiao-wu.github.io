@{
    string guid = Html.Guid(); //编辑页从信息数据中读取
    string table = ViewBag.Table;
    CurrentUser currentUser = ViewBag.CurrentUser;
    string action = ViewContext.RouteData.Values["action"].ToString();
    IEnumerable<dynamic> fieldData = Html.GetFieldList((string)ViewBag.Table, action, currentUser);
    int xuhao = StringHelper.Format<int>(Request.QueryString["xuhao"]);
    xuhao++;
}
<div class="main" id="main">
    <script src="~/Incs/UEditor/ueditor.forAdmin.config.js" type="text/javascript"></script>
    <script src="~/Incs/UEditor/ueditor.all.min.js" type="text/javascript"></script>
    <el-form ref="form" label-width="150px" label-position="left">
        @{
            string beforeSubmitJs = "";
            var data = new ViewDataDictionary();
            data.Add("from", PageAdmin.Common.FromEnum.Admin);
            data.Add("currentUser", currentUser);  //当前用户
            data.Add("guid", guid);
            data.Add("i", 0);
            int i = 0;
            foreach (var item in fieldData)
            {
                data["i"] = i;
                beforeSubmitJs += item.BeforeSubmitJs;
                Html.RenderPartial("~/Areas/E/Views/CustomForm/FormPartial.cshtml", (object)item, data);
                i++;
            }
        }
        <el-form-item label="最终分类">
            <el-radio-group v-model="IsFinal" :disabled="Id>0">
                <el-radio :label="1">是</el-radio>
                <el-radio :label="0">否</el-radio>
            </el-radio-group>
            <span class="help-block">设置为最终分类后当前分类不能添加子类</span>
        </el-form-item>
        <el-form-item label="是否启用">
            <el-radio-group v-model="State">
                <el-radio :label="1">是</el-radio>
                <el-radio :label="0">否</el-radio>
            </el-radio-group>
            <span class="help-block">设置为最终分类后当前分类不能添加子类</span>
        </el-form-item>
        <el-form-item label="序号">
            <el-input v-model="Xuhao" maxlength="3" v-validate="{data:Xuhao,dataType:'numeric',nullMsg:'请填写序号！'}"></el-input>
            <span class="help-block validate-tips-box"></span>
        </el-form-item>
    </el-form>
    <div class="footer-submit-bar" style="padding-left:100px">
        <el-button type="primary" v-on:click="postSubmit">提交</el-button>
        <el-button onclick="closeSelf()">关闭</el-button>
    </div>
</div>
<script type="text/javascript">
    //绑定数据
    var id = request("id");
    var formData = @Html.RawModel((string)Model);
    formData.ParentId =@(StringHelper.Format<int>(Request.QueryString["parentId"]));
    if (id == undefined || id == "" || id == "0")
    {
        formData.Level = 1;
        formData.IsFinal = 1;
        formData.State = 1;
        formData.Xuhao = @xuhao;
    }
    formData.Guid="@guid";
    var vue = new Vue({
        el: "#main",
        data: formData,
        methods: {
            postSubmit: function () {
                var validated = this.validateForm({ tipsStyle: 1, beforeSubmit: function () { return BeforeSubmit() } });//jquery表单验证
                if (validated) {
                    this.submit({ url: "@Url.ActionUrl()", data: formData, success: "PostBack()"});
                }
            }
        },
    });
    function BeforeSubmit() {
        @Html.Raw(beforeSubmitJs)
        return true;
    }
    function PostBack() {
        if (id == "") {
            location.href = replaceParamVal("xuhao", formData.Xuhao);
        }
        parent.loadData();
    }
    function replaceParamVal(paramName, replaceWith) {
        var oUrl = location.href.toString();
        var re = eval('/(' + paramName + '=)([^&]*)/gi');
        var nUrl = oUrl.replace(re, paramName + '=' + replaceWith);
        return nUrl;
    }
</script>