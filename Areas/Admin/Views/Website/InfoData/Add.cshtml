@using PageAdmin.Utils
@{
    dynamic permissionsSet = ViewBag.PermissionsSet;
    CurrentUser user = ViewBag.CurrentUser;
    int tableId = ViewBag.TableId;
    string table = ViewBag.Table;
    string postUrl;
    string action = ViewContext.RouteData.Values["action"].ToString().ToLower();
    if (action == "edit")
    {
        postUrl = Url.ActionUrl("InfoEdit");
    }
    else
    {
        postUrl = Url.ActionUrl("InfoAdd");
    }
    postUrl += "?table=" + table;
    IEnumerable<dynamic> fieldData = Html.GetFieldList((string)ViewBag.Table, action, user);
    var guid = Html.Guid();
    int historyColumnId =StringHelper.Format<int>(Request.QueryString["columnId"]);
    var columnTree = Html.GetColumnTree(tableId,user);
}
<script src="~/Incs/UEditor/ueditor.forAdmin.config.js" type="text/javascript"></script>
<script src="~/Incs/UEditor/ueditor.all.min.js" type="text/javascript"></script>
<div class="main" id="main">
    <el-tabs v-model="activeName" type="card">
        <el-tab-pane label="内容设置" name="1">
            <el-form label-width="150px" label-position="left">
                <el-form-item label="所属栏目*"  v-show="ignoreColumn==false">
                    <ui-cascader v-model="formData.ColumnId" placeholder="请选择栏目" :options="@JsonHelper.JsonParse(columnTree)" :props="{ expandTrigger: 'hover',multiple:false }" v-validate="{data:formData.ColumnId,dataType:'*',min:1,nullMsg:'请选择栏目!',ignore:ignoreColumn}"></ui-cascader>
                    <span class="help-block"></span>
                </el-form-item>
                @{
                    string beforeSubmitJs = "";
                    var data = new ViewDataDictionary();
                    data.Add("from", PageAdmin.Common.FromEnum.Admin);
                    data.Add("currentUser", user);
                    data.Add("guid", guid);
                    data.Add("i", 0);
                    data.Add("fieldPrefix", "formData");
                    int i = 0;
                    if (fieldData != null)
                    {
                        foreach (var row in fieldData)
                        {
                            data["i"] = i;
                            beforeSubmitJs += row.BeforeSubmitJs;
                            Html.RenderPartial("~/Areas/E/Views/CustomForm/FormPartial.cshtml", (object)row, data);
                            i++;
                        }
                    }
                }
                @if (user.IsSuperAdmin)
                {
                    <el-form-item label="信息状态">
                        <el-radio-group v-model="formData.State">
                            <el-radio :label="1">已审</el-radio>
                            <el-radio :label="0">待审</el-radio>
                            <el-radio :label="-1">退稿</el-radio>
                            <el-radio :label="-2">草稿</el-radio>
                        </el-radio-group>
                        <span class="help-block"></span>
                    </el-form-item>
                }
            </el-form>
        </el-tab-pane>

        <el-tab-pane label="其他设置" name="2">
            <el-form label-width="120px" label-position="left" class="small">
                <el-form-item label="seo标题">
                    <el-input v-model="seoSet.Title" maxlength="150"></el-input>
                    <span class="help-block"></span>
                </el-form-item>

                <el-form-item label="seo关键词">
                    <el-input v-model="seoSet.Keywords" class="form-control"></el-input>
                    <span class="help-block"></span>
                </el-form-item>

                <el-form-item label="seo描述">
                    <el-input type="textarea" v-model="seoSet.Description" :autosize="{ minRows:3, maxRows:6}"></el-input>
                    <span class="help-block"></span>
                </el-form-item>

                <el-form-item label="Tag标签">
                    <ui-tag v-model="tags"></ui-tag>
                    <span class="help-block">添加的标签可以在网站>标签管理中进行管理</span>
                </el-form-item>

                <el-form-item label="信息属性">
                    <el-select v-model="formData.IsGood">
                        <el-option :value="0" label="推荐属性"></el-option>
                        <el-option :value="1" label="1级推荐"></el-option>
                        <el-option :value="2" label="2级推荐"></el-option>
                        <el-option :value="3" label="3级推荐"></el-option>
                        <el-option :value="4" label="4级推荐"></el-option>
                        <el-option :value="5" label="5级推荐"></el-option>
                        <el-option :value="6" label="6级推荐"></el-option>
                        <el-option :value="7" label="7级推荐"></el-option>
                        <el-option :value="8" label="8级推荐"></el-option>
                        <el-option :value="9" label="9级推荐"></el-option>
                        <el-option :value="10" label="10级推荐"></el-option>
                    </el-select>

                    <el-select v-model="formData.IsHot">
                        <el-option :value="0" label="热门属性"></el-option>
                        <el-option :value="1" label="1级热门"></el-option>
                        <el-option :value="2" label="2级热门"></el-option>
                        <el-option :value="3" label="3级热门"></el-option>
                        <el-option :value="4" label="4级热门"></el-option>
                        <el-option :value="5" label="5级热门"></el-option>
                        <el-option :value="6" label="6级热门"></el-option>
                        <el-option :value="7" label="7级热门"></el-option>
                        <el-option :value="8" label="8级热门"></el-option>
                        <el-option :value="9" label="9级热门"></el-option>
                        <el-option :value="10" label="10级热门"></el-option>
                    </el-select>
                    <el-select v-model="formData.IsTop">
                        <el-option :value="0" label="置顶属性"></el-option>
                        <el-option :value="1" label="1级置顶"></el-option>
                        <el-option :value="2" label="2级置顶"></el-option>
                        <el-option :value="3" label="3级置顶"></el-option>
                        <el-option :value="4" label="4级置顶"></el-option>
                        <el-option :value="5" label="5级置顶"></el-option>
                        <el-option :value="6" label="6级置顶"></el-option>
                        <el-option :value="7" label="7级置顶"></el-option>
                        <el-option :value="8" label="8级置顶"></el-option>
                        <el-option :value="9" label="9级置顶"></el-option>
                        <el-option :value="10" label="10级置顶"></el-option>
                    </el-select>
                    <span class="help-block">属性可用于前台数据筛选和组合，字段名分别为：isGood，isHot，isTop，都是数值类型</span>
                </el-form-item>

                <el-form-item label="点击数">
                    <el-input-number v-model="formData.Clicks" id="Clicks" v-validate="{data:formData.Clicks,dataType:'numeric'}"></el-input-number>
                    <span class="help-block"></span>
                </el-form-item>

                <el-form-item label="预上线日期">
                    <el-date-picker v-model="onlineDate" value-format="yyyy-MM-dd" type="date" placeholder="请选择日期"></el-date-picker>
                    <span class="help-block">预上线日期大于当前时间后自动上线（isOnline字段值更新为1），不填写则信息默认为上线状态。</span>
                </el-form-item>

                <el-form-item label="到期日期">
                    <el-date-picker v-model="expireDate" value-format="yyyy-MM-dd" type="date" placeholder="请选择日期"></el-date-picker>
                    <span class="help-block">当前日期大于所设置的过期日期后，信息将自动到期（isExpire字段值更新为1），不填写则不进行任何处理。</span>
                </el-form-item>

                <el-form-item label="信息页模版">
                    <el-input placeholder="信息页模板文件" v-model="templateSet.TemplateDetail" clearable>
                        <template slot="append">
                            <el-button v-on:click="dialog({title:'选择内容页模板',url:'@Url.ActionUrl("Select","TemplateManager")?setData=parent.vue.templateSet.TemplateDetail',width:'600px',height:'90%',target:'self'})">选择</el-button>
                        </template>
                    </el-input>
                    <span class="help-block">不填写则继承栏目设置中的内容页模板</span>
                </el-form-item>

                <el-form-item label="自定义文件名">
                    <el-input v-model="urlSet.ZdyPath" maxlength="50" v-validate="{data:urlSet.ZdyPath,dataType:'string',ignoreEmpty:true,errorMsg:'只能填写英文和数字组成的字符！'}"></el-input>
                    <span class="help-block">不能填写纯数字，留空则采用Id作为文件名。</span>
                </el-form-item>

                <el-form-item label="自定义链接">
                    <el-input v-model="urlSet.ZdyUrl" maxlength="150"></el-input>
                    <span class="help-block">留空则系统默认</span>
                </el-form-item>
            </el-form>
        </el-tab-pane>
    </el-tabs>
    <div class="footer-submit-bar" style="padding-left:150px">
        <el-button type="primary" v-on:click="postSubmit">提交保存</el-button>
        <el-button onclick="closeSelf()">关闭</el-button>
    </div>
</div>

<script type="text/javascript">

    var action = "@action";
    var postUrl = "@postUrl";
    var vueData = {
        activeName:"1",
        formData:@Html.RawModel((string)Model)
        ,seoSet:@Html.RawModel((string)ViewBag.SeoSet)
        ,templateSet:@Html.RawModel((string)ViewBag.TemplateSet)
        ,urlSet:@Html.RawModel((string)ViewBag.UrlSet)
        ,onlineDate:"@ViewBag.OnlineDate"
        ,expireDate: "@ViewBag.ExpireDate"
        ,tags:"@ViewBag.Tags"
        };
    vueData.formData.Guid = "@guid";
    if ("@action"=="add")
    {
        vueData.formData.State = @ViewBag.DefaultState;
        //刷新后保存上次的栏目id，避免再次选择
        var historyColumnId = @historyColumnId;
        if (historyColumnId!=0)
        {
            vueData.formData.ColumnId =historyColumnId;
        }
    }
    else
    {
        if (vueData.formData.State == 1) //设置为管理员编辑后的默认权限，信息已经通过审核后，再次编辑后状态根据管理员权限改变
        {
            vueData.formData.State = @ViewBag.DefaultState;
        }
    }

    //提交前执行
    function beforeSubmitExecute() {
        @Html.Raw(beforeSubmitJs)
        return true;
    }
      var vue= new Vue({
          el: "#main",
          data: vueData,
          computed: {
              ignoreColumn: function ()
              {
                  return @(columnTree.Count())<=0;
              }

          },
          methods: {
              postSubmit: function () {
                  console.log(vueData.tags)
                  var serverData = {
                      formData:vueData.formData
                      ,seoSet:vueData.seoSet
                      ,templateSet:vueData.templateSet
                      ,urlSet:vueData.urlSet
                      ,onlineDate:vueData.onlineDate
                      ,expireDate:vueData.expireDate
                      ,tags:vueData.tags
                  };
                    var validated = this.validateForm({ beforeSubmit:function (){ return beforeSubmitExecute() }});//jquery表单验证
                    if (validated)
                    {
                        this.submit({ url: "@postUrl", data: serverData, contentType: "application/json", success: function () { callBack() }});
                    }
              },
          },
    });

      function callBack() {
            parent.loadData();
            if (action == "add") {
                location.href = "@Url.ActionUrl("Add")?table=@table&columnId=" + vueData.formData.ColumnId;
            }
        }
</script>
