@{
    CurrentUser user = ViewBag.CurrentUser;
    string action = ViewContext.RouteData.Values["action"].ToString();
    IEnumerable<dynamic> fieldData = Html.GetFieldList((string)ViewBag.Table, action, user, PageAdmin.Common.FromEnum.Member);
    string guid = Html.Guid();
}
<div class="main" id="main">
    <el-form ref="form" label-width="130px" label-position="left" data-source="@Model">
        <el-form-item label="用户组:">
            <ui-select v-model="formData.MemberGroupId" placeholder="选择用户组" :multiple="false" :clearable="false" v-bind:options="@Html.GetOptionsJson("pa_member_group","name","","Rank asc")"></ui-select>
            <span class="help-block validate-tips-box"></span>
        </el-form-item>
        <el-form-item label="所属部门:">
            <ui-cascader v-model="formData.DepartmentId" :options="@Html.GetTreeJson("pa_department","name","","xuhao asc")" style="width:100%;"></ui-cascader>
            <span class="help-block validate-tips-box">无部门默认不选择</span>
        </el-form-item>
        <el-form-item label="用户名*">
            <el-input v-model="formData.Username"
                      v-validate="{data:formData.Username,dataType:'*',nullMsg:'请填写用户名!',errorMsg:'用户名控制在2-16字符之间，且只能是数字、字母、下划线或中文字符组成!'}" maxlength="50"></el-input>
            <span class="help-block validate-tips-box"></span>
        </el-form-item>
        <el-form-item label="密码*">
            <el-input v-model="formData.Password" type="password"
                      v-validate="{data:formData.Password,dataType:'password',nullMsg:'请填写密码!',errorMsg:'密码长度控制在2到16位字符之间！'}" maxlength="50"></el-input>
            <span class="help-block validate-tips-box"></span>
        </el-form-item>
        <el-form-item label="邮箱">
            <el-input v-model="formData.Email" v-validate="{data:formData.Email,dataType:'email',ignoreEmpty:true,nullMsg:'请填写邮箱！',errorMsg:'邮箱格式错误！'}" maxlength="50"></el-input>
            <span class="help-block validate-tips-box"></span>
        </el-form-item>
        <el-form-item label="手机号">
            <el-input v-model="formData.Mobile" v-validate="{data:formData.Mobile,dataType:'mobile',ignoreEmpty:true,nullMsg:'请填写手机号！',errorMsg:'手机号码格式错误！'}" maxlength="50"></el-input>
            <span class="help-block validate-tips-box"></span>
        </el-form-item>
        @{
            string beforeSubmitJs = "";
            var data = new ViewDataDictionary();
            data.Add("from", PageAdmin.Common.FromEnum.Member);
            data.Add("guid", guid);
            data.Add("currentUser", ViewBag.CurrentUser);
            data.Add("memberGroupId", ViewBag.MemberGroupId);
            data.Add("fieldPrefix", "formData");
            data.Add("i", 0);
            int i = 0;
            if (fieldData != null)
            {
                foreach (var row in fieldData)
                {
                    data["i"] = i;
                    beforeSubmitJs += row.BeforeSubmitJs;
                    Html.RenderPartial("~/Areas/E/Views/CustomForm/FormPartial.cshtml", (object)row, data);
                    i++;
                }
            }

        }
    </el-form>
    <div class="footer-submit-bar" style="padding-left:100px">
        <el-button type="primary" v-on:click="postSubmit">提交</el-button>
        <el-button onclick="closeSelf()">关闭</el-button>
    </div>
</div>
<script src="~/Incs/UEditor/ueditor.forAdmin.config.js" type="text/javascript"></script>
<script src="~/Incs/UEditor/ueditor.all.min.js" type="text/javascript"></script>
<script type="text/javascript">
    var id = "@Request.QueryString["id"]";
    var formData = @Html.RawModel((string)Model);
        formData.Guid = "@guid";
        formData.State = 1;
        formData.Logins = 0;
        formData.IsAdmin = 0;
        formData.MemberGroupId = 1;
         //注册树组件
    //vue实例化
    var vue = new Vue({
        el: "#main",
        data: {
            formData: formData,
        },
        methods: {
            postSubmit: function () {
                var validated = this.validateForm({ beforeSubmit: function () { return BeforeSubmit() }});//jquery表单验证
                if (validated) {
                    this.submit({ url: "@Url.ActionUrl()", data: formData, success: function () { postRefreshBack() } });
                }
            }
        },
    });
    function BeforeSubmit()
    {
        @Html.Raw(beforeSubmitJs)
        return true;
    }
    function postRefreshBack() {
        if (id == "") {
            location.href = location.href
        }
        parent.loadData();
    }
</script>